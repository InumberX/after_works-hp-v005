@use './variables' as v;
@use 'sass:math';

// Media Query
@mixin mxMediaQueryXs() {
  @media screen and (min-width: v.$blakepoint-xs), print {
    @content;
  }
}

@mixin mxMediaQuerySm() {
  @media screen and (min-width: v.$blakepoint-sm), print {
    @content;
  }
}

@mixin mxMediaQueryMd() {
  @media screen and (min-width: v.$blakepoint-md), print {
    @content;
  }
}

@mixin mxMediaQueryLg() {
  @media screen and (min-width: v.$blakepoint-lg), print {
    @content;
  }
}

@mixin mxMediaQueryXl() {
  @media screen and (min-width: v.$blakepoint-xl), print {
    @content;
  }
}

@mixin mxMediaQueryXxl() {
  @media screen and (min-width: v.$blakepoint-xxl), print {
    @content;
  }
}

@mixin mxMediaQueryPrint() {
  @media print {
    @content;
  }
}

@mixin mxMediaHover() {
  @media (hover: hover) {
    @content;
  }
}

// Font
@mixin mxGetFontSize($font-sizePx) {
  font-size: math.div($font-sizePx, v.$font-size) * 1rem;
}

// Lists
@mixin mxGetMarginListItems($Margin__top, $Margin__left) {
  margin: (-$Margin__top) 0 0 (-$Margin__left);
}

@mixin mxGetPaddingListItem($Padding__top, $Padding__left) {
  padding: $Padding__top 0 0 $Padding__left;
}

// Arrow
@mixin mxArrowLine(
  $WidthAndHeight,
  $Position,
  $Margin,
  $Border__width,
  $Border__color,
  $Deg
) {
  content: '';
  position: absolute;
  display: block;
  width: $WidthAndHeight;
  height: $WidthAndHeight;
  @each $Key, $Val in $Position {
    #{$Key}: $Val;
  }
  @each $Key, $Val in $Margin {
    #{$Key}: $Val;
  }
  border-left: $Border__width solid $Border__color;
  border-bottom: $Border__width solid $Border__color;
  @if ($Deg != '') {
    transform: rotate($Deg);
  }
  transition: 0.3s border-color, 0.3s transform;
  @content;
}

// Triangle
@mixin mxTriangle($Width, $Height, $Border__color, $Deg) {
  content: '';
  position: absolute;
  display: block;
  border-top: $Height solid $Border__color;
  border-right: math.div($Width, 2) solid transparent;
  border-left: math.div($Width, 2) solid transparent;
  @if ($Deg != '') {
    transform: rotate($Deg);
  }
  transition: 0.3s border-color, 0.3s transform;
  @content;
}
